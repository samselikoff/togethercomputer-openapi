openapi: 3.1.0
info:
  title: Together APIs
  version: "0.2"
servers:
  - url: https://api.together.xyz
security:
  - sec0: []
paths:
  "/v1/chat/completions":
    post:
      summary: Chat Completions
      description: Endpoint for chat and moderation models on Together AI
      operationId: chat-completions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - messages
              properties:
                messages:
                  type: array
                  description: A list of messages comprising the conversation so far.
                  items:
                    properties:
                      role:
                        type: string
                        description:
                          "The role of the messages author. Choice between:
                          system, user, or assistant."
                        default: user
                        enum:
                          - system
                          - user
                          - assistant
                      content:
                        type: string
                        description: The contents of the message.
                        default: What is the capital of France?
                    required:
                      - role
                      - content
                    type: object
                model:
                  type: string
                  description: The name of the model to query.
                  default: mistralai/Mixtral-8x7B-Instruct-v0.1

                stream:
                  type: boolean
                  description:
                    If true, stream tokens as Server-Sent Events as the
                    model generates them instead of waiting for the full model response.
                    If false, return a single JSON object containing the results.
                max_tokens:
                  type: integer
                  description: The maximum number of tokens to generate.
                  format: int32
                stop:
                  type: array
                  description:
                    A list of string sequences that will truncate (stop)
                    inference text output. For example, "</s>" will stop generation
                    as soon as the model generates the given token.
                  items:
                    type: string
                temperature:
                  type: number
                  description:
                    A decimal number that determines the degree of randomness
                    in the response. A value of 1 will always yield the same output.
                    A temperature less than 1 favors more correctness and is appropriate
                    for question answering or summarization. A value greater than
                    1 introduces more randomness in the output.
                  default: 0.7
                  format: float
                top_p:
                  type: number
                  description:
                    The `top_p` (nucleus) parameter is used to dynamically
                    adjust the number of choices for each predicted token based on
                    the cumulative probabilities. It specifies a probability threshold,
                    below which all less likely tokens are filtered out. This technique
                    helps to maintain diversity and generate more fluent and natural-sounding
                    text.
                  format: float
                top_k:
                  type: integer
                  description:
                    The `top_k` parameter is used to limit the number of
                    choices for the next predicted word or token. It specifies the
                    maximum number of tokens to consider at each step, based on their
                    probability of occurrence. This technique helps to speed up the
                    generation process and can improve the quality of the generated
                    text by focusing on the most likely options.
                  format: int32
                repetition_penalty:
                  type: number
                  description:
                    A number that controls the diversity of generated text
                    by reducing the likelihood of repeated sequences. Higher values
                    decrease repetition.
                  format: float
                logprobs:
                  type: integer
                  description: Number of top-k logprobs to return
                  format: int32
                echo:
                  type: boolean
                  description:
                    Echo prompt in output. Can be used with `logprobs`
                    to return prompt logprobs.
                "n":
                  type: integer
                  description: How many completions to generate for each prompt
                  format: int32
                safety_model:
                  type: string
                  description:
                    A moderation model to validate tokens. Choice between
                    available moderation models found [here](https://docs.together.ai/docs/inference-models#moderation-models)
                  enum:
                    - Meta-Llama/Llama-Guard-7b
                response_format:
                  type: object
                  description:
                    "An object specifying the format that the model must
                    output. Accepted value: `json_object`."
                  properties:
                    type:
                      type: string
                      description:
                        Type of response format. Currently only supports
                        `json_object`.
                      enum:
                        - json_object
                    schema:
                      type: string
                      description:
                        A valid JSON schema. Can be used to force a specific
                        response schema.
                      format: json
                tools:
                  type: array
                  description:
                    A list of tools the model may call. Currently, only
                    functions are supported as a tool. Use this to provide a list
                    of functions the model may generate JSON inputs for.
                  items:
                    properties:
                      type:
                        type: string
                        description:
                          The type of the tool. Currently, only function
                          is supported.
                        enum:
                          - function
                      function:
                        type: object
                        required:
                          - name
                        properties:
                          description:
                            type: string
                            description:
                              A description of what the function does,
                              used by the model to choose when and how to call the
                              function.
                          name:
                            type: string
                            description:
                              The name of the function to be called. Must
                              be a-z, A-Z, 0-9, or contain underscores and dashes,
                              with a maximum length of 64.
                          parameters:
                            type: string
                            description:
                              The parameters the functions accepts, described
                              as a JSON Schema object.
                            format: json
                    required:
                      - type
                    type: object
                tool_choice:
                  type: object
                  description:
                    'Controls which (if any) function is called by the
                    model. `auto` means the model can pick between generating a message
                    or calling a function. Specifying a particular function via `{"type":
                    "function", "function": {"name": "my_function"}}` forces the model
                    to call that function. `auto` is the default.'
                  properties:
                    type:
                      type: string
                      description:
                        The type of the tool. Currently, only `function`
                        is supported.
                      enum:
                        - function
                    function:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          description: The name of the function to call.
                frequency_penalty:
                  type: number
                  description:
                    This is a number between -2.0 and 2.0 where a positive
                    value will decrease the likelihood of repeating tokens that were
                    mentioned prior.
                  default: 0
                  format: float
                presence_penalty:
                  type: number
                  description:
                    This is a number between -2.0 and 2.0 where a positive
                    value will increase the likelihood of a model talking about new
                    topics.
                  default: 0
                  format: float
                min_p:
                  type: number
                  description:
                    An alternative to temperature. Please only use one
                    but not both
                  format: float
            examples:
              System Prompt:
                value:
                  model: mistralai/Mixtral-8x7B-Instruct-v0.1
                  max_tokens: 512
                  stop:
                    - "</s>"
                    - "[/INST]"
                  temperature: 0.7
                  top_p: 0.7
                  top_k: 50
                  repetition_penalty: 1
                  messages:
                    - role: system
                      content: You are a helpful travel agent
                    - role: user
                      content: Tell me about San Francisco
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "8448080b880415ea-SJC",
                      "choices": [
                        {
                          "message": {
                            "role": "assistant",
                            "content": "San Francisco is a vibrant and culturally rich city located in Northern California. It is known for its steep rolling hills, iconic landmarks, and cool, foggy weather. Here are some of the top attractions in San Francisco:\n\n1. The Golden Gate Bridge: This iconic red suspension bridge spans the Golden Gate Strait and is one of the most famous landmarks in the world.\n2. Alcatraz Island: Once a federal prison, Alcatraz Island is now a popular tourist destination. Visitors can take a ferry to the island and explore the prison buildings and learn about its infamous inmates.\n3. Fisherman's Wharf: This popular tourist area is known for its seafood restaurants, shopping, and attractions such as the sea lion colony at Pier 39 and the USS Hornet Museum.\n4. Chinatown: San Francisco's Chinatown is one of the oldest and largest in North America, and is a great place to explore Chinese culture, cuisine, and shopping.\n5. The Presidio: This national park is located at the northern tip of the San Francisco Peninsula and offers hiking trails, beaches, and stunning views of the Golden Gate Bridge.\n6. The Painted Ladies: These colorful Victorian homes are one of the most photographed sites in San Francisco.\n7. Cable Cars: These historic cable cars offer a unique way to get around the city's steep hills and are a fun way to see the sights.\n8. Union Square: This central plaza is surrounded by shops, restaurants, and theaters, and is a popular gathering place for both locals and tourists.\n9. The Ferry Building Marketplace: This historic building houses a food hall featuring local artisanal food and drink vendors.\n10. The Exploratorium: This interactive science museum is located on the Embarcadero and offers hands-on exhibits and educational programs for all ages.\n\nSan Francisco is also known for its cultural diversity, progressive values, and vibrant arts scene, making it a must-visit destination for any traveler."
                          }
                        }
                      ],
                      "usage": {
                        "prompt_tokens": 31,
                        "completion_tokens": 455,
                        "total_tokens": 486
                      },
                      "created": 1705090115,
                      "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",
                      "object": "chat.completion"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 8448080b880415ea-SJC
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: object
                          properties:
                            role:
                              type: string
                              example: assistant
                            content:
                              type: string
                              example: |-
                                San Francisco is a vibrant and culturally rich city located in Northern California. It is known for its steep rolling hills, iconic landmarks, and cool, foggy weather. Here are some of the top attractions in San Francisco:

                                1. The Golden Gate Bridge: This iconic red suspension bridge spans the Golden Gate Strait and is one of the most famous landmarks in the world.
                                2. Alcatraz Island: Once a federal prison, Alcatraz Island is now a popular tourist destination. Visitors can take a ferry to the island and explore the prison buildings and learn about its infamous inmates.
                                3. Fisherman's Wharf: This popular tourist area is known for its seafood restaurants, shopping, and attractions such as the sea lion colony at Pier 39 and the USS Hornet Museum.
                                4. Chinatown: San Francisco's Chinatown is one of the oldest and largest in North America, and is a great place to explore Chinese culture, cuisine, and shopping.
                                5. The Presidio: This national park is located at the northern tip of the San Francisco Peninsula and offers hiking trails, beaches, and stunning views of the Golden Gate Bridge.
                                6. The Painted Ladies: These colorful Victorian homes are one of the most photographed sites in San Francisco.
                                7. Cable Cars: These historic cable cars offer a unique way to get around the city's steep hills and are a fun way to see the sights.
                                8. Union Square: This central plaza is surrounded by shops, restaurants, and theaters, and is a popular gathering place for both locals and tourists.
                                9. The Ferry Building Marketplace: This historic building houses a food hall featuring local artisanal food and drink vendors.
                                10. The Exploratorium: This interactive science museum is located on the Embarcadero and offers hands-on exhibits and educational programs for all ages.

                                San Francisco is also known for its cultural diversity, progressive values, and vibrant arts scene, making it a must-visit destination for any traveler.
                  usage:
                    type: object
                    properties:
                      prompt_tokens:
                        type: integer
                        example: 31
                        default: 0
                      completion_tokens:
                        type: integer
                        example: 455
                        default: 0
                      total_tokens:
                        type: integer
                        example: 486
                        default: 0
                  created:
                    type: integer
                    example: 1705090115
                    default: 0
                  model:
                    type: string
                    example: mistralai/Mixtral-8x7B-Instruct-v0.1
                  object:
                    type: string
                    example: chat.completion
        "400":
          description: "400"
          content:
            text/plain:
              examples:
                Result:
                  value: Input required
        "401":
          description: "401"
          content:
            text/plain:
              examples:
                Result:
                  value: Missing API key
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: Invalid Endpoint URL or model name
        "429":
          description: "429"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "500":
          description: "500"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "503":
          description: "503"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "504":
          description: "504"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "524":
          description: "524"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "529":
          description: "529"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false

  "/v1/completions":
    post:
      summary: Completions
      description: Endpoint for language, code, and image models on Together AI
      operationId: completions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - prompt
                - max_tokens
              properties:
                model:
                  type: string
                  description: The name of the model to query.
                  default: mistralai/Mixtral-8x7B-v0.1
                prompt:
                  type: string
                  description: A string providing context for the model to complete.
                  default:
                    List all of the states in the USA and their capitals in
                    a table.
                max_tokens:
                  type: integer
                  description: The maximum number of tokens to generate.
                  default: 200
                  format: int32
                stream:
                  type: boolean
                  description:
                    If true, stream tokens as Server-Sent Events as the
                    model generates them instead of waiting for the full model response.
                    If false, return a single JSON object containing the results.
                stop:
                  type: array
                  description:
                    A list of string sequences that will truncate (stop)
                    inference text output. For example, "</s>" will stop generation
                    as soon as the model generates the given token.
                  default:
                    - "</s>"
                  items:
                    type: string
                temperature:
                  type: number
                  description:
                    A decimal number that determines the degree of randomness
                    in the response. A value of 1 will always yield the same output.
                    A temperature less than 1 favors more correctness and is appropriate
                    for question answering or summarization. A value greater than
                    1 introduces more randomness in the output.
                  format: float
                top_p:
                  type: number
                  description:
                    The `top_p` (nucleus) parameter is used to dynamically
                    adjust the number of choices for each predicted token based on
                    the cumulative probabilities. It specifies a probability threshold,
                    below which all less likely tokens are filtered out. This technique
                    helps to maintain diversity and generate more fluent and natural-sounding
                    text.
                  format: float
                top_k:
                  type: integer
                  description:
                    The `top_k` parameter is used to limit the number of
                    choices for the next predicted word or token. It specifies the
                    maximum number of tokens to consider at each step, based on their
                    probability of occurrence. This technique helps to speed up the
                    generation process and can improve the quality of the generated
                    text by focusing on the most likely options.
                  format: int32
                repetition_penalty:
                  type: number
                  description:
                    A number that controls the diversity of generated text
                    by reducing the likelihood of repeated sequences. Higher values
                    decrease repetition.
                  format: float
                logprobs:
                  type: integer
                  description: Number of top-k logprobs to return
                  format: int32
                echo:
                  type: boolean
                  description:
                    Echo prompt in output. Can be used with `logprobs`
                    to return prompt logprobs.
                "n":
                  type: integer
                  description: How many completions to generate for each prompt
                  format: int32
                safety_model:
                  type: string
                  description:
                    A moderation model to validate tokens. Choice between
                    available moderation models found [here](https://docs.together.ai/docs/inference-models#moderation-models)
                  enum:
                    - Meta-Llama/Llama-Guard-7b
            examples:
              Text Generation:
                value:
                  model: mistralai/Mixtral-8x7B-Instruct-v0.1
                  prompt: "<s>[INST] What is the capital of France? [/INST]"
                  max_tokens: 512
                  stop:
                    - "</s>"
                    - "[/INST]"
                  temperature: 0.7
                  top_p: 0.7
                  top_k: 50
                  repetition_penalty: 1
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "8447f286bbdb67b3-SJC",
                      "choices": [
                        {
                          "text": "The capital of France is Paris. It's located in the north-central part of the country and is one of the most famous cities in the world, known for its iconic landmarks such as the Eiffel Tower, Louvre Museum, Notre-Dame Cathedral, and more. Paris is also the cultural, political, and economic center of France."
                        }
                      ],
                      "usage": {
                        "prompt_tokens": 16,
                        "completion_tokens": 78,
                        "total_tokens": 94
                      },
                      "created": 1705089226,
                      "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",
                      "object": "text_completion"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 8447f286bbdb67b3-SJC
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        text:
                          type: string
                          example:
                            The capital of France is Paris. It's located in
                            the north-central part of the country and is one of the
                            most famous cities in the world, known for its iconic
                            landmarks such as the Eiffel Tower, Louvre Museum, Notre-Dame
                            Cathedral, and more. Paris is also the cultural, political,
                            and economic center of France.
                  usage:
                    type: object
                    properties:
                      prompt_tokens:
                        type: integer
                        example: 16
                        default: 0
                      completion_tokens:
                        type: integer
                        example: 78
                        default: 0
                      total_tokens:
                        type: integer
                        example: 94
                        default: 0
                  created:
                    type: integer
                    example: 1705089226
                    default: 0
                  model:
                    type: string
                    example: mistralai/Mixtral-8x7B-Instruct-v0.1
                  object:
                    type: string
                    example: text_completion
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "error": {
                        "message": "Input required",
                        "type": "invalid_request_error",
                        "param": null,
                        "code": null
                      }
                    }
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Input required
                      type:
                        type: string
                        example: invalid_request_error
                      param: {}
                      code: {}
        "401":
          description: "401"
          content:
            text/plain:
              examples:
                Result:
                  value: Missing API key
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "error": {
                        "message": "google/gemma-7b is a language model and is not supported by the v1/chat/completions endpoint. Did you mean to use v1/completions?",
                        "type": "invalid_request_error",
                        "param": "model",
                        "code": null
                      }
                    }
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example:
                          google/gemma-7b is a language model and is not supported
                          by the v1/chat/completions endpoint. Did you mean to use
                          v1/completions?
                      type:
                        type: string
                        example: invalid_request_error
                      param:
                        type: string
                        example: model
                      code: {}
        "429":
          description: "429"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "error": {
                        "message": "Request was rejected due to rate limiting. As a paid user, your QPS is 100. If you want more, please contact support@together.ai.",
                        "type": "credit_limit",
                        "param": null,
                        "code": null
                      }
                    }
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example:
                          Request was rejected due to rate limiting. As a paid
                          user, your QPS is 100. If you want more, please contact
                          support@together.ai.
                      type:
                        type: string
                        example: credit_limit
                      param: {}
                      code: {}
        "503":
          description: "503"
          content:
            application/json:
              examples:
                Engine Overloaded:
                  value: |-
                    {
                      "error": {
                        "message": "Service unavailable",
                        "type": "server_error",
                        "param": null,
                        "code": null
                      }
                    }
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Service unavailable
                      type:
                        type: string
                        example: server_error
                      param: {}
                      code: {}
        "504":
          description: "504"
          content:
            text/plain:
              examples:
                Result:
                  value: Timeout, contact support@together.ai
      deprecated: false
  "/v1/embeddings":
    post:
      summary: Embeddings
      description: Endpoint for embedding models on Together AI
      operationId: embeddings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - input
              properties:
                model:
                  type: string
                  description: The name of the embedding model to use.
                  default: togethercomputer/m2-bert-80M-8k-retrieval
                input:
                  type: string
                  description: A string providing the text for the model to embed.
                  default:
                    Our solar system orbits the Milky Way galaxy at about 515,000
                    mph
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "status": "finished",
                      "prompt": [
                        "The capital of France is "
                      ],
                      "model": "togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1",
                      "model_owner": "",
                      "tags": {},
                      "num_returns": 1,
                      "args": {
                        "model": "togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1",
                        "prompt": "The capital of France is ",
                        "temperature": 0.8,
                        "top_p": 0.7,
                        "top_k": 50,
                        "max_tokens": 1
                      },
                      "subjobs": [],
                      "output": {
                        "choices": [
                          {
                            "finish_reason": "length",
                            "index": 0,
                            "text": " Paris"
                          }
                        ],
                        "raw_compute_time": 0.06382315792143345,
                        "result_type": "language-model-inference"
                      }
                    }
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: finished
                  prompt:
                    type: array
                    items:
                      type: string
                      example: "The capital of France is "
                  model:
                    type: string
                    example: togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1
                  model_owner:
                    type: string
                    example: ""
                  tags:
                    type: object
                    properties: {}
                  num_returns:
                    type: integer
                    example: 1
                    default: 0
                  args:
                    type: object
                    properties:
                      model:
                        type: string
                        example: togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1
                      prompt:
                        type: string
                        example: "The capital of France is "
                      temperature:
                        type: number
                        example: 0.8
                        default: 0
                      top_p:
                        type: number
                        example: 0.7
                        default: 0
                      top_k:
                        type: integer
                        example: 50
                        default: 0
                      max_tokens:
                        type: integer
                        example: 1
                        default: 0
                  subjobs:
                    type: array
                  output:
                    type: object
                    properties:
                      choices:
                        type: array
                        items:
                          type: object
                          properties:
                            finish_reason:
                              type: string
                              example: length
                            index:
                              type: integer
                              example: 0
                              default: 0
                            text:
                              type: string
                              example: " Paris"
                      raw_compute_time:
                        type: number
                        example: 0.06382315792143345
                        default: 0
                      result_type:
                        type: string
                        example: language-model-inference
        "400":
          description: "400"
          content:
            text/plain:
              examples:
                Result:
                  value: Input required
        "401":
          description: "401"
          content:
            text/plain:
              examples:
                Result:
                  value: Missing API key
        "403":
          description: "403"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "500":
          description: "500"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v1/embeddings (COPY)":
    post:
      summary: Embeddings (COPY)
      description: Endpoint for embedding models on Together AI
      operationId: embeddings-copy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - model
                - input
              properties:
                model:
                  type: string
                  description: The name of the embedding model to use.
                  default: togethercomputer/m2-bert-80M-8k-retrieval
                input:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "status": "finished",
                      "prompt": [
                        "The capital of France is "
                      ],
                      "model": "togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1",
                      "model_owner": "",
                      "tags": {},
                      "num_returns": 1,
                      "args": {
                        "model": "togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1",
                        "prompt": "The capital of France is ",
                        "temperature": 0.8,
                        "top_p": 0.7,
                        "top_k": 50,
                        "max_tokens": 1
                      },
                      "subjobs": [],
                      "output": {
                        "choices": [
                          {
                            "finish_reason": "length",
                            "index": 0,
                            "text": " Paris"
                          }
                        ],
                        "raw_compute_time": 0.06382315792143345,
                        "result_type": "language-model-inference"
                      }
                    }
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: finished
                  prompt:
                    type: array
                    items:
                      type: string
                      example: "The capital of France is "
                  model:
                    type: string
                    example: togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1
                  model_owner:
                    type: string
                    example: ""
                  tags:
                    type: object
                    properties: {}
                  num_returns:
                    type: integer
                    example: 1
                    default: 0
                  args:
                    type: object
                    properties:
                      model:
                        type: string
                        example: togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1
                      prompt:
                        type: string
                        example: "The capital of France is "
                      temperature:
                        type: number
                        example: 0.8
                        default: 0
                      top_p:
                        type: number
                        example: 0.7
                        default: 0
                      top_k:
                        type: integer
                        example: 50
                        default: 0
                      max_tokens:
                        type: integer
                        example: 1
                        default: 0
                  subjobs:
                    type: array
                  output:
                    type: object
                    properties:
                      choices:
                        type: array
                        items:
                          type: object
                          properties:
                            finish_reason:
                              type: string
                              example: length
                            index:
                              type: integer
                              example: 0
                              default: 0
                            text:
                              type: string
                              example: " Paris"
                      raw_compute_time:
                        type: number
                        example: 0.06382315792143345
                        default: 0
                      result_type:
                        type: string
                        example: language-model-inference
        "400":
          description: "400"
          content:
            text/plain:
              examples:
                Result:
                  value: Input required
        "401":
          description: "401"
          content:
            text/plain:
              examples:
                Result:
                  value: Missing API key
        "403":
          description: "403"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
        "500":
          description: "500"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: Authorization
      x-bearer-format: bearer
      x-default: default
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
x-readme-fauxas: true
